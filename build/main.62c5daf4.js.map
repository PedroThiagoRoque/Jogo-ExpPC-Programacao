{"version":3,"file":"main.62c5daf4.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AElDA;AACA;AACA;AACA;AACA","sources":["webpack://jogo-exppc-programacao/./src/Commands/Command.ts","webpack://jogo-exppc-programacao/./src/Commands/CommandFor.ts","webpack://jogo-exppc-programacao/./src/Commands/CommandIF.ts","webpack://jogo-exppc-programacao/./src/Commands/CommandController.ts","webpack://jogo-exppc-programacao/./src/Item.ts","webpack://jogo-exppc-programacao/./src/Map.ts","webpack://jogo-exppc-programacao/./src/Player.ts","webpack://jogo-exppc-programacao/./src/Runtime.ts","webpack://jogo-exppc-programacao/./src/App.ts","webpack://jogo-exppc-programacao/./src/Level/index.ts","webpack://jogo-exppc-programacao/./src/index.ts","webpack://jogo-exppc-programacao/webpack/bootstrap","webpack://jogo-exppc-programacao/webpack/runtime/chunk loaded","webpack://jogo-exppc-programacao/webpack/runtime/compat get default export","webpack://jogo-exppc-programacao/webpack/runtime/define property getters","webpack://jogo-exppc-programacao/webpack/runtime/global","webpack://jogo-exppc-programacao/webpack/runtime/hasOwnProperty shorthand","webpack://jogo-exppc-programacao/webpack/runtime/jsonp chunk loading","webpack://jogo-exppc-programacao/webpack/before-startup","webpack://jogo-exppc-programacao/webpack/startup","webpack://jogo-exppc-programacao/webpack/after-startup"],"sourcesContent":["class Command {\n    constructor(name) {\n        this._commands = [];\n        this._options = {};\n        this._name = name;\n        //if (block) this.next = CommandController.loadBlock(block);\n    }\n    getCommands() {\n        return this._commands;\n    }\n    add(name) {\n        // if (name == \"block_for\") {\n        //     const command = new CommandFor(name);\n        //     this._commands.push(command);\n        //     return command;\n        // }\n        // if (name == \"block_if\") {\n        //     const command = new CommandIF(name);\n        //     this._commands.push(command);\n        //     return command;\n        // }\n        // if (name == \"block_if_else\") {\n        //     const command = new CommandIF(name);\n        //     this._commands.push(command);\n        //     return command;\n        // }\n        const command = new Command(name);\n        this._commands.push(command);\n        return command;\n    }\n    addOption(name, value) {\n        console.log(this._options);\n        this._options[name] = value;\n        console.log(this._options);\n    }\n    get name() {\n        return this._name;\n    }\n    set next(command) {\n        this._next = command;\n    }\n    get next() {\n        return this._next;\n    }\n}\nexport default Command;\n","import Command from \"./Command\";\nclass CommandFor extends Command {\n    set command(value) {\n        this._command = value;\n    }\n    get command() {\n        return this._command;\n    }\n    set iterator(value) {\n        this._iterator = value;\n    }\n    get iterator() {\n        return this._iterator;\n    }\n}\nexport default CommandFor;\n","import Command from \"./Command\";\nclass CommandIF extends Command {\n    set true(block) {\n        this._true = block;\n    }\n    set false(block) {\n        this._false = block;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    get true() {\n        return this._true;\n    }\n    get false() {\n        return this._false;\n    }\n    get value() {\n        return this._value;\n    }\n}\nexport default CommandIF;\n","import Command from \"./Command\";\nimport CommandFor from './CommandFor';\nimport CommandIF from './CommandIF';\nclass CommandController {\n    static Import(blocks) {\n        var _a;\n        const command = new Command(\"block_start\");\n        if ((_a = blocks[0]) === null || _a === void 0 ? void 0 : _a.inputs) {\n            command.next = CommandController.loadBlock(blocks[0].inputs.command.block);\n        }\n        return command;\n    }\n    static CreateCommand(name) {\n        if (name == \"block_for\")\n            return new CommandFor(name);\n        if (name == \"block_if\")\n            return new CommandIF(name);\n        if (name == \"block_if_else\")\n            return new CommandIF(name);\n        return new Command(name);\n    }\n    static loadBlock(block) {\n        var _a, _b, _c;\n        const command = CommandController.CreateCommand(block.type); //new Command(block.type);//this.add(block.type);\n        if (block.next) {\n            command.next = CommandController.loadBlock(block.next.block);\n        }\n        if (command instanceof CommandFor) {\n            if ((_a = block.inputs) === null || _a === void 0 ? void 0 : _a.command)\n                command.command = CommandController.loadBlock(block.inputs.command.block);\n            command.iterator = block.fields.iterator;\n        }\n        if (command instanceof CommandIF) {\n            if ((_b = block.inputs) === null || _b === void 0 ? void 0 : _b.true)\n                command.true = CommandController.loadBlock(block.inputs.true.block);\n            if ((_c = block.inputs) === null || _c === void 0 ? void 0 : _c.false)\n                command.false = CommandController.loadBlock(block.inputs.false.block);\n            command.value = block.fields.NAME;\n        }\n        return command;\n    }\n}\nexport default CommandController;\n","class Item {\n    constructor(name = \"\", image = \"\") {\n        this.setItem(name, image);\n    }\n    setItem(name, image) {\n        this._name = name;\n        this._image = image;\n    }\n    remove() {\n        this.element.remove();\n    }\n    get name() {\n        return this._name;\n    }\n    get image() {\n        return this._image;\n    }\n    set element(element) {\n        this._element = element;\n    }\n    get element() {\n        return this._element;\n    }\n    static Queijo() {\n        return new Item(\"Queijo\", \"queijo.png\");\n    }\n    static Pao() {\n        return new Item(\"Pao\", \"pao.png\");\n    }\n    static Presunto() {\n        return new Item(\"Presunto\", \"presunto.png\");\n    }\n    static Ovo() {\n        return new Item(\"Ovo\", \"ovo.png\");\n    }\n    static Leite() {\n        return new Item(\"Leite\", \"leite.png\");\n    }\n    static Farinha() {\n        return new Item(\"Farinha\", \"farinha.png\");\n    }\n    static Chocolate() {\n        return new Item(\"Chocolate\", \"chocolate.png\");\n    }\n}\nexport default Item;\n","import Item from \"./Item\";\nclass Map {\n    static Start() {\n        this.mapElement = document.querySelector(\"#map\");\n        this.homeElement = document.querySelector(\"#home\");\n        this.map = [];\n        for (let i = 0; i < this.columns; i++) {\n            const gridItem = document.createElement(\"div\");\n            gridItem.setAttribute(\"x\", String(i));\n            const items = [];\n            for (let j = 0; j < this.lines; j++) {\n                const gridItemItem = document.createElement(\"div\");\n                gridItemItem.setAttribute(\"y\", String(i));\n                gridItemItem.setAttribute(\"x\", String(j));\n                if (i == 0 || i == 11 || i == 22 || j == 0 || j == 9 || j == 18) {\n                    gridItemItem.classList.add(\"border\");\n                    items.push(null);\n                    gridItemItem.setAttribute(\"solid\", \"false\");\n                    gridItemItem.innerHTML = `<span>${i}x${j}</span>`;\n                }\n                else {\n                    gridItemItem.setAttribute(\"solid\", \"true\");\n                    items.push(true);\n                }\n                gridItem.append(gridItemItem);\n            }\n            this.map.push(items);\n            this.mapElement.querySelector(\".grid\").append(gridItem);\n        }\n    }\n    static CreateItem(item, x, y) {\n        this.SetMap(x, y, item);\n        /*\n        const item = new Item(\"Queijo\", \"queijo.png\");\n        this.SetMap(x, y, item);\n    \n        const item2 = new Item(\"Pao\", \"pao.png\");\n        this.SetMap(x, y-4, item2);\n    \n        const item3 = new Item(\"Presunto\", \"presunto.png\");\n        this.SetMap(x, y-8, item3);*/\n    }\n    static GetItem(x, y) {\n        const item = this.GetMap(x, y);\n        if (item instanceof Item)\n            return item;\n        return false;\n    }\n    static RemoveItem(x, y) {\n        const item = this.GetItem(x, y);\n        if (item instanceof Item) {\n            this.SetMap(x, y, true);\n            return item;\n        }\n        return false;\n    }\n    static IsCollider(x, y) {\n        if (x < 0 || y < 0 || x > this.lines - 1 || y > this.columns - 1) {\n            return true;\n        }\n        else if (x > 0 && x < this.columns && y > 0 && y < this.lines) {\n            return this.GetMap(x, y) === true;\n        }\n        return false;\n    }\n    static SetHome(x, y) {\n        const position = this.GetPosition(x, y);\n        this.homeElement.style.top = position.y + \"px\";\n        this.homeElement.style.left = position.x + \"px\";\n        this.positionHome = { x, y };\n    }\n    static GetHome() {\n        return this.positionHome;\n    }\n    static IsHome(x, y) {\n        return x == this.positionHome.x && y == this.positionHome.y;\n    }\n    static GetMap(x, y) {\n        return this.map[y][x];\n    }\n    static SetMap(x, y, value) {\n        if (value instanceof Item) {\n            const position = this.GetPosition(x, y);\n            const img = document.createElement(\"img\");\n            img.classList.add(\"item\");\n            img.style.top = position.y + \"px\";\n            img.style.left = position.x + \"px\";\n            img.src = \"/items/\" + value.image;\n            //value\n            this.mapElement.querySelector(\"#items\").append(img);\n            value.element = img;\n        }\n        const current = this.GetMap(x, y);\n        if (current instanceof Item)\n            current.remove();\n        this.map[x][y] = value;\n    }\n    static GetPosition(x, y) {\n        return {\n            x: x * this.size,\n            y: y * this.size,\n        };\n    }\n}\nMap.positionHome = { x: 0, y: 0 };\nMap.columns = 23;\nMap.lines = 19;\nMap.size = 30;\nMap.map = [];\nexport default Map;\n","import Map from \"./Map\";\nclass Player {\n    static Start() {\n        this.playerElement = document.querySelector(\"#player\");\n        this.transform = {\n            position: this._initialPosition,\n            rotation: \"up\"\n        };\n        Player.ChangeSkin(\"normal.png\");\n    }\n    static AddItem(item) {\n        this.inventory = item;\n        Player.ChangeSkin(item.image);\n        //this.playerElement.style.backgroundImage = `url(personagem2${item.name}.png)`;\n    }\n    static RemoveItem() {\n        const item = this.inventory;\n        this.inventory = null;\n        Player.ChangeSkin(\"normal.png\");\n        return item;\n        //this.playerElement.style.backgroundImage = `url(personagem2${item.name}.png)`;\n    }\n    static ChangeSkin(image) {\n        this.playerElement.style.backgroundImage = `url(/player/${image})`;\n    }\n    static Reset() {\n        // this.playerElement.style.backgroundImage = `url(personagem2.png)`;\n        this.Rotation(\"up\");\n        Player.ChangeSkin(\"normal.png\");\n        this.SetPosition(this._initialPosition.y, this._initialPosition.x);\n    }\n    static Run() {\n        this.Reset();\n    }\n    static Move() {\n        let { x, y } = this.transform.position;\n        switch (this.rotation) {\n            case \"up\":\n                x -= 1;\n                break;\n            case \"down\":\n                x += 1;\n                break;\n            case \"left\":\n                y -= 1;\n                break;\n            case \"right\":\n                y += 1;\n                break;\n        }\n        if (!Map.IsCollider(x, y))\n            this.SetPosition(x, y);\n    }\n    //[\"left\",\"up\",\"right\",\"down\"]; \n    static Left() {\n        this.Rotation(Player.hashRotation[this.rotation].previous);\n    }\n    static Right() {\n        this.Rotation(Player.hashRotation[this.rotation].next);\n    }\n    static Rotation(direction) {\n        this.transform.rotation = direction;\n        const angle = {\n            up: 0,\n            left: 270,\n            right: 90,\n            down: 180,\n        };\n        this.playerElement.style.transform = `rotate(${angle[direction]}deg)`;\n    }\n    static SetPosition(x, y) {\n        if (Map.IsCollider(x, y) == false) {\n            this.transform.position = { x, y };\n            this.UpdatePosition();\n        }\n        else {\n            console.log(\"Oi\");\n            document.querySelector(\"#message\").innerHTML = \"Não é possível caminhar\";\n        }\n        // this._position = Map.GetPosition(0, 0);\n    }\n    static UpdatePosition() {\n        const { x, y } = this.worldPosition;\n        this.playerElement.style.top = x + \"px\";\n        this.playerElement.style.left = y + \"px\";\n    }\n    static SetInitialPosition(x, y) {\n        this._initialPosition = { x, y };\n        this.SetPosition(this._initialPosition.y, this._initialPosition.x);\n    }\n    static get position() {\n        return this.transform.position;\n    }\n    static get worldPosition() {\n        const { x, y } = this.transform.position;\n        return Map.GetPosition(x, y);\n    }\n    static get rotation() {\n        return this.transform.rotation;\n    }\n    static get initialPosition() {\n        return this._initialPosition;\n    }\n}\nPlayer._initialPosition = { x: 0, y: 0 };\nPlayer.hashRotation = {\n    left: { previous: \"down\", next: \"up\" },\n    up: { previous: \"left\", next: \"right\" },\n    right: { previous: \"up\", next: \"down\" },\n    down: { previous: \"right\", next: \"left\" },\n};\nexport default Player;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport CommandFor from \"./Commands/CommandFor\";\nimport CommandIF from \"./Commands/CommandIF\";\nimport Map from \"./Map\";\nimport Player from \"./Player\";\nclass Runtime {\n    constructor(command) {\n        this.command = command;\n    }\n    static delay(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n    Run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            Player.Reset();\n            let command = this.command.next;\n            while (command != null) {\n                yield this.RunCommand(command);\n                command = command.next;\n            }\n            /*\n            for(let command of commands){\n                switch(command.name){\n                    case \"block_move\":\n                    break;\n                }\n            }*/\n        });\n    }\n    RunCommand(command) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (command instanceof CommandIF) {\n                const item = Map.GetItem(Player.position.x, Player.position.y);\n                if (item && item.name == command.value) {\n                    let commandTrue = command.true;\n                    while (commandTrue != null) {\n                        yield this.RunCommand(commandTrue);\n                        commandTrue = commandTrue.next;\n                    }\n                }\n                else {\n                    let commandFalse = command.false;\n                    while (commandFalse != null) {\n                        yield this.RunCommand(commandFalse);\n                        commandFalse = commandFalse.next;\n                    }\n                }\n            }\n            else if (command instanceof CommandFor) {\n                for (let i = 0; i < command.iterator; i++) {\n                    let commandFor = command.command;\n                    while (commandFor != null) {\n                        yield this.RunCommand(commandFor);\n                        commandFor = commandFor.next;\n                    }\n                }\n            }\n            else {\n                switch (command.name) {\n                    case \"block_move\":\n                        Player.Move();\n                        break;\n                    case \"block_left\":\n                        Player.Left();\n                        break;\n                    case \"block_right\":\n                        Player.Right();\n                        break;\n                    case \"block_pickup\":\n                        const item = Map.RemoveItem(Player.position.x, Player.position.y);\n                        if (item) {\n                            Player.AddItem(item);\n                        }\n                        break;\n                }\n            }\n            yield Runtime.delay(800);\n        });\n    }\n}\nexport default Runtime;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Blockly from 'blockly';\nimport CommandController from './Commands/CommandController';\nimport Map from './Map';\nimport Player from './Player';\nimport Runtime from './Runtime';\nclass App {\n    constructor(level) {\n        this.level = level;\n        level.app = this;\n    }\n    Start() {\n        Map.Start();\n        Player.Start();\n        this.level.Start();\n        this.workspace = Blockly.inject('blocklyDiv', { toolbox: this.toolbox });\n        //   const temp = { \"type\": \"block_start\", \"id\": \"Q@]:+vc8mu`XtIUv^]n)\", \"x\": 200, \"y\": 200, \"movable\": false, \"editable\": false, \"inputs\": { \"command\": { \"block\": { \"type\": \"block_right\", \"id\": \"cCX:@%8lo#QEDBMNZ*RM\", \"next\": { \"block\": { \"type\": \"block_move\", \"id\": \"73T0qIE@{D(%38Pg1W,^\", \"next\": { \"block\": { \"type\": \"block_left\", \"id\": \"D#q,}-jzb~~-vRO7ar=$\", \"next\": { \"block\": { \"type\": \"block_left\", \"id\": \"m/CY2UTKl(-UM|JG2a:;\", \"next\": { \"block\": { \"type\": \"block_move\", \"id\": \"NnLw^cSq6q1KpCw-O~*V\" } } } } } } } } } } } };\n        //    Blockly.serialization.blocks.append(temp, this.workspace);\n        Blockly.serialization.blocks.append({ type: 'block_start', x: 200, y: 200 }, this.workspace);\n    }\n    Run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const commands = this.GenerateCommand();\n            const runtime = new Runtime(commands);\n            yield runtime.Run();\n        });\n    }\n    Import(blocks) {\n        //defineBlocksWithJsonArray\n        Blockly.defineBlocksWithJsonArray(blocks);\n        Blockly.Blocks['block_start'] = {\n            init: function () {\n                this.appendDummyInput()\n                    .appendField(\"Começar\");\n                this.appendStatementInput(\"command\")\n                    .setCheck(null);\n                this.setColour(180);\n                this.setEditable(false);\n                this.setMovable(false);\n                this.moveBy(0, 0);\n            }\n        };\n    }\n    ToolBox(blocks) {\n        this.toolbox = {\n            kind: \"flyoutToolbox\",\n            contents: blocks.map((name) => ({\n                type: name,\n                kind: \"block\"\n            }))\n        };\n    }\n    GenerateCommand() {\n        const json = Blockly.serialization.workspaces.save(this.workspace);\n        //     console.log(JSON.stringify(json.blocks.blocks))\n        return CommandController.Import(json.blocks.blocks);\n    }\n}\nexport default App;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Item from \"../Item\";\nimport Map from '../Map';\nimport Player from \"../Player\";\nclass Level {\n    constructor() {\n        this.playElement = document.querySelector(\"#play\");\n        this.playElement.onclick = this._onClick.bind(this);\n        this.playElement.classList.remove(\"disabled\");\n    }\n    _onClick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.playElement.classList.add(\"disabled\");\n            yield this.Run();\n            this.playElement.classList.remove(\"disabled\");\n        });\n    }\n    Start() {\n        this.app.ToolBox([\"block_move\", \"block_left\", \"block_right\", \"block_pickup\", \"block_if\", \"block_if_else\", \"block_for\"]);\n        Map.CreateItem(Item.Pao(), 7, 9);\n        Map.CreateItem(Item.Presunto(), 11, 5);\n        Map.CreateItem(Item.Queijo(), 7, 0);\n        Map.CreateItem(Item.Pao(), 0, 3);\n        Player.SetInitialPosition(5, 9);\n        Map.SetHome(5, 9);\n    }\n    Run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.app.Run();\n            alert(\"Fim\");\n        });\n    }\n    Finish() {\n    }\n    get app() {\n        return this._app;\n    }\n    set app(app) {\n        this._app = app;\n    }\n}\nexport default Level;\n","import blocksData from '../blocks.json';\nimport App from './App';\nimport Level from './Level';\nconst level = new Level;\nconst app = new App(level);\napp.Import(blocksData);\napp.Start();\nexport default {};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkjogo_exppc_programacao\"] = self[\"webpackChunkjogo_exppc_programacao\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [948], function() { return __webpack_require__(493); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}